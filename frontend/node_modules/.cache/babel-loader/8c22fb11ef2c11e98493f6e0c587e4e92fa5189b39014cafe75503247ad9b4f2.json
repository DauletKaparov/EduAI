{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\n// Temporarily bypass authentication\n// import { Navigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    user,\n    loading\n  } = useAuth();\n\n  // TEMPORARY: Bypass all authentication checks\n  // Always render children, no authentication required\n  // This is only for testing purposes\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(ProtectedRoute, \"EmJkapf7qiLC5Br5eCoEq4veZes=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useAuth","Fragment","_Fragment","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","user","loading","_c","$RefreshReg$"],"sources":["/Users/dauletkaparov/Desktop/MVP2/frontend/src/components/ProtectedRoute.tsx"],"sourcesContent":["import React from 'react';\n// Temporarily bypass authentication\n// import { Navigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children }) => {\n  const { user, loading } = useAuth();\n\n  // TEMPORARY: Bypass all authentication checks\n  // Always render children, no authentication required\n  // This is only for testing purposes\n  return <>{children}</>;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA,SAASC,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAMlD,MAAMC,cAA6C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGT,OAAO,CAAC,CAAC;;EAEnC;EACA;EACA;EACA,oBAAOI,OAAA,CAAAF,SAAA;IAAAI,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACC,EAAA,CAPIF,cAA6C;EAAA,QACvBL,OAAO;AAAA;AAAAU,EAAA,GAD7BL,cAA6C;AASnD,eAAeA,cAAc;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}