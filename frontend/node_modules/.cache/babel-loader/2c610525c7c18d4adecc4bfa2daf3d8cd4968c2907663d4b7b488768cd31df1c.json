{"ast":null,"code":"var _jsxFileName = \"/Users/dauletkaparov/Desktop/MVP2/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is already logged in on mount\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await axios.get(`${API_URL}/api/auth/me`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setUser(response.data);\n        } catch (err) {\n          console.error('Authentication error:', err);\n          localStorage.removeItem('token');\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async (username, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const formData = new FormData();\n      formData.append('username', username);\n      formData.append('password', password);\n      const response = await axios.post(`${API_URL}/api/auth/token`, formData);\n      localStorage.setItem('token', response.data.access_token);\n\n      // Get user data\n      const userResponse = await axios.get(`${API_URL}/api/auth/me`, {\n        headers: {\n          Authorization: `Bearer ${response.data.access_token}`\n        }\n      });\n      setUser(userResponse.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Login failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      await axios.post(`${API_URL}/api/auth/register`, {\n        username,\n        email,\n        password,\n        preferences: {\n          knowledge_level: 5.0,\n          prefer_explanations: 0.6,\n          prefer_examples: 0.3,\n          prefer_resources: 0.1,\n          prefer_length: 0.5\n        }\n      });\n\n      // Login after successful registration\n      await login(username, password);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.detail) || 'Registration failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  const updatePreferences = async preferences => {\n    try {\n      setLoading(true);\n      setError(null);\n      const token = localStorage.getItem('token');\n      if (!token || !user) {\n        throw new Error('Not authenticated');\n      }\n      const response = await axios.put(`${API_URL}/api/users/me`, {\n        preferences\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUser(response.data);\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.detail) || 'Failed to update preferences');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      error,\n      login,\n      register,\n      logout,\n      updatePreferences\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","jsxDEV","_jsxDEV","AuthContext","undefined","API_URL","process","env","REACT_APP_API_URL","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","checkAuth","token","localStorage","getItem","response","get","headers","Authorization","data","err","console","removeItem","login","username","password","formData","FormData","append","post","setItem","access_token","userResponse","_err$response","_err$response$data","detail","register","email","preferences","knowledge_level","prefer_explanations","prefer_examples","prefer_resources","prefer_length","_err$response2","_err$response2$data","logout","updatePreferences","Error","put","_err$response3","_err$response3$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/Users/dauletkaparov/Desktop/MVP2/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\n\ninterface User {\n  id: string;\n  username: string;\n  email: string;\n  preferences: Record<string, any>;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  error: string | null;\n  login: (username: string, password: string) => Promise<void>;\n  register: (username: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n  updatePreferences: (preferences: Record<string, any>) => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Check if user is already logged in on mount\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await axios.get(`${API_URL}/api/auth/me`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setUser(response.data);\n        } catch (err) {\n          console.error('Authentication error:', err);\n          localStorage.removeItem('token');\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (username: string, password: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const formData = new FormData();\n      formData.append('username', username);\n      formData.append('password', password);\n      \n      const response = await axios.post(`${API_URL}/api/auth/token`, formData);\n      localStorage.setItem('token', response.data.access_token);\n      \n      // Get user data\n      const userResponse = await axios.get(`${API_URL}/api/auth/me`, {\n        headers: {\n          Authorization: `Bearer ${response.data.access_token}`\n        }\n      });\n      \n      setUser(userResponse.data);\n    } catch (err: any) {\n      setError(err.response?.data?.detail || 'Login failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (username: string, email: string, password: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      await axios.post(`${API_URL}/api/auth/register`, {\n        username,\n        email,\n        password,\n        preferences: {\n          knowledge_level: 5.0,\n          prefer_explanations: 0.6,\n          prefer_examples: 0.3,\n          prefer_resources: 0.1,\n          prefer_length: 0.5\n        }\n      });\n      \n      // Login after successful registration\n      await login(username, password);\n    } catch (err: any) {\n      setError(err.response?.data?.detail || 'Registration failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  const updatePreferences = async (preferences: Record<string, any>) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const token = localStorage.getItem('token');\n      if (!token || !user) {\n        throw new Error('Not authenticated');\n      }\n      \n      const response = await axios.put(\n        `${API_URL}/api/users/me`,\n        { preferences },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }\n      );\n      \n      setUser(response.data);\n    } catch (err: any) {\n      setError(err.response?.data?.detail || 'Failed to update preferences');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ \n      user, \n      loading, \n      error, \n      login, \n      register, \n      logout,\n      updatePreferences\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}